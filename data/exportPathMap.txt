next.config.js Options: exportPathMap | Next.js
Skip to content
Search documentation...
Search...
⌘K
Showcase
Docs
Blog
Analytics
Templates
Enterprise
Search documentation...
Search...
⌘K
Feedback
Learn
Menu
Using Pages Router
Features available in /pages
Getting Started
Installation
Project Structure
Building Your Application
Routing
Defining Routes
Pages and Layouts
Linking and Navigating
Route Groups
Dynamic Routes
Loading UI and Streaming
Error Handling
Parallel Routes
Intercepting Routes
Route Handlers
Middleware
Project Organization
Internationalization
Data Fetching
Fetching, Caching, and Revalidating
Server Actions and Mutations
Data Fetching Patterns and Best Practices
Rendering
Server Components
Client Components
Composition Patterns
Edge and Node.js Runtimes
Caching
Styling
CSS Modules
Tailwind CSS
CSS-in-JS
Sass
Optimizing
Images
Fonts
Scripts
Metadata
Static Assets
Lazy Loading
Analytics
OpenTelemetry
Instrumentation
Third Party Libraries
Configuring
TypeScript
ESLint
Environment Variables
Absolute Imports and Module Path Aliases
MDX
src Directory
Draft Mode
Content Security Policy
Testing
Vitest
Jest
Playwright
Cypress
Deploying
Static Exports
Upgrading
Codemods
App Router Migration
Version 14
Migrating from Vite
API Reference
Components
Font
<Image>
<Link>
<Script>
File Conventions
default.js
error.js
layout.js
loading.js
not-found.js
page.js
route.js
Route Segment Config
template.js
Metadata Files
favicon, icon, and apple-icon
manifest.json
opengraph-image and twitter-image
robots.txt
sitemap.xml
Functions
cookies
draftMode
fetch
generateImageMetadata
generateMetadata
generateSitemaps
generateStaticParams
generateViewport
headers
ImageResponse
NextRequest
NextResponse
notFound
permanentRedirect
redirect
revalidatePath
revalidateTag
unstable_cache
unstable_noStore
useParams
usePathname
useReportWebVitals
useRouter
useSearchParams
useSelectedLayoutSegment
useSelectedLayoutSegments
userAgent
next.config.js Options
appDir
assetPrefix
basePath
compress
devIndicators
distDir
env
eslint
exportPathMap
generateBuildId
generateEtags
headers
httpAgentOptions
images
incrementalCacheHandlerPath
logging
mdxRs
onDemandEntries
optimizePackageImports
output
pageExtensions
Partial Prerendering (experimental)
poweredByHeader
productionBrowserSourceMaps
reactStrictMode
redirects
rewrites
serverActions
serverComponentsExternalPackages
trailingSlash
transpilePackages
turbo
typedRoutes
typescript
urlImports
webpack
webVitalsAttribution
create-next-app
Edge Runtime
Next.js CLI
Building Your Application
Routing
Pages and Layouts
Dynamic Routes
Linking and Navigating
Custom App
Custom Document
Custom Errors
API Routes
Internationalization
Authenticating
Middleware
Rendering
Server-side Rendering (SSR)
Static Site Generation (SSG)
Automatic Static Optimization
Client-side Rendering (CSR)
Edge and Node.js Runtimes
Data Fetching
getStaticProps
getStaticPaths
Forms and Mutations
getServerSideProps
Incremental Static Regeneration
Client-side Fetching
Styling
CSS Modules
Tailwind CSS
CSS-in-JS
Sass
Optimizing
Images
Fonts
Scripts
Static Assets
Lazy Loading
Analytics
OpenTelemetry
Instrumentation
Third Party Libraries
Configuring
TypeScript
ESLint
Environment Variables
Absolute Imports and Module Path Aliases
src Directory
MDX
AMP
Babel
PostCSS
Custom Server
Draft Mode
Error Handling
Debugging
Preview Mode
Content Security Policy
Testing
Vitest
Jest
Playwright
Cypress
Deploying
Going to Production
Static Exports
Multi Zones
Continuous Integration (CI) Build Caching
Upgrading
Codemods
From Pages to App
Version 14
Version 13
Version 12
Version 11
Version 10
Version 9
API Reference
Components
Font
<Head>
<Image>
<Image> (Legacy)
<Link>
<Script>
Functions
getInitialProps
getServerSideProps
getStaticPaths
getStaticProps
NextRequest
NextResponse
useAmp
useReportWebVitals
useRouter
userAgent
next.config.js Options
assetPrefix
basePath
compress
devIndicators
distDir
env
eslint
exportPathMap
generateBuildId
generateEtags
headers
httpAgentOptions
images
onDemandEntries
output
pageExtensions
poweredByHeader
productionBrowserSourceMaps
reactStrictMode
redirects
rewrites
Runtime Config
trailingSlash
transpilePackages
turbo
typescript
urlImports
webpack
webVitalsAttribution
create-next-app
Next.js CLI
Edge Runtime
Architecture
Accessibility
Fast Refresh
Next.js Compiler
Supported Browsers
Turbopack
Community
Contribution Guide
On this page
Adding a trailing slash
Customizing the output directory
Edit this page on GitHub
Scroll to top
Pages Router
...
next.config.js Options
exportPathMap
exportPathMap
This feature is exclusive to
next export
and currently
deprecated
in favor of
getStaticPaths
with
pages
or
generateStaticParams
with
app
.
Examples
Static Export
exportPathMap
allows you to specify a mapping of request paths to page destinations, to be used during export. Paths defined in
exportPathMap
will also be available when using
next dev
.
Let's start with an example, to create a custom
exportPathMap
for an app with the following pages:
pages/index.js
pages/about.js
pages/post.js
Open
next.config.js
and add the following
exportPathMap
config:
next.config.js
module
.
exports
=
{
exportPathMap
:
async
function
(
defaultPathMap
,
{ dev
,
dir
,
outDir
,
distDir
,
buildId }
) {
return
{
'/'
:
{ page
:
'/'
}
,
'/about'
:
{ page
:
'/about'
}
,
'/p/hello-nextjs'
:
{ page
:
'/post'
,
query
:
{ title
:
'hello-nextjs'
} }
,
'/p/learn-nextjs'
:
{ page
:
'/post'
,
query
:
{ title
:
'learn-nextjs'
} }
,
'/p/deploy-nextjs'
:
{ page
:
'/post'
,
query
:
{ title
:
'deploy-nextjs'
} }
,
}
}
,
}
Good to know
: the
query
field in
exportPathMap
cannot be used with
automatically statically optimized pages
or
getStaticProps
pages
as they are rendered to HTML files at build-time and additional query information cannot be provided during
next export
.
The pages will then be exported as HTML files, for example,
/about
will become
/about.html
.
exportPathMap
is an
async
function that receives 2 arguments: the first one is
defaultPathMap
, which is the default map used by Next.js. The second argument is an object with:
dev
-
true
when
exportPathMap
is being called in development.
false
when running
next export
. In development
exportPathMap
is used to define routes.
dir
- Absolute path to the project directory
outDir
- Absolute path to the
out/
directory (
configurable with
-o
). When
dev
is
true
the value of
outDir
will be
null
.
distDir
- Absolute path to the
.next/
directory (configurable with the
distDir
config)
buildId
- The generated build id
The returned object is a map of pages where the
key
is the
pathname
and the
value
is an object that accepts the following fields:
page
:
String
- the page inside the
pages
directory to render
query
:
Object
- the
query
object passed to
getInitialProps
when prerendering. Defaults to
{}
The exported
pathname
can also be a filename (for example,
/readme.md
), but you may need to set the
Content-Type
header to
text/html
when serving its content if it is different than
.html
.
Adding a trailing slash
It is possible to configure Next.js to export pages as
index.html
files and require trailing slashes,
/about
becomes
/about/index.html
and is routable via
/about/
. This was the default behavior prior to Next.js 9.
To switch back and add a trailing slash, open
next.config.js
and enable the
trailingSlash
config:
next.config.js
module
.
exports
=
{
trailingSlash
:
true
,
}
Customizing the output directory
next export
will use
out
as the default output directory, you can customize this using the
-o
argument, like so:
Terminal
next
export
-o
outdir
Warning
: Using
exportPathMap
is deprecated and is overridden by
getStaticPaths
inside
pages
. We don't recommend using them together.
Previous
eslint
Next
generateBuildId
Was this helpful?
supported.
Send
Resources
Docs
Learn
Showcase
Blog
Analytics
Next.js Conf
Previews
More
Commerce
Contact Sales
GitHub
Releases
Telemetry
About
Vercel
Next.js + Vercel
Open Source Software
GitHub
Twitter
Legal
Privacy Policy
Cookie Preferences
Subscribe to our newsletter
Stay updated on new releases and features, guides, and case studies.
Subscribe
©
2023
Vercel
, Inc.