Deploying: Continuous Integration (CI) Build Caching | Next.js
Skip to content
Search documentation...
Search...
⌘K
Showcase
Docs
Blog
Analytics
Templates
Enterprise
Search documentation...
Search...
⌘K
Feedback
Learn
Menu
Using Pages Router
Features available in /pages
Getting Started
Installation
Project Structure
Building Your Application
Routing
Defining Routes
Pages and Layouts
Linking and Navigating
Route Groups
Dynamic Routes
Loading UI and Streaming
Error Handling
Parallel Routes
Intercepting Routes
Route Handlers
Middleware
Project Organization
Internationalization
Data Fetching
Fetching, Caching, and Revalidating
Server Actions and Mutations
Data Fetching Patterns and Best Practices
Rendering
Server Components
Client Components
Composition Patterns
Edge and Node.js Runtimes
Caching
Styling
CSS Modules
Tailwind CSS
CSS-in-JS
Sass
Optimizing
Images
Fonts
Scripts
Metadata
Static Assets
Lazy Loading
Analytics
OpenTelemetry
Instrumentation
Third Party Libraries
Configuring
TypeScript
ESLint
Environment Variables
Absolute Imports and Module Path Aliases
MDX
src Directory
Draft Mode
Content Security Policy
Testing
Vitest
Jest
Playwright
Cypress
Deploying
Static Exports
Upgrading
Codemods
App Router Migration
Version 14
Migrating from Vite
API Reference
Components
Font
<Image>
<Link>
<Script>
File Conventions
default.js
error.js
layout.js
loading.js
not-found.js
page.js
route.js
Route Segment Config
template.js
Metadata Files
favicon, icon, and apple-icon
manifest.json
opengraph-image and twitter-image
robots.txt
sitemap.xml
Functions
cookies
draftMode
fetch
generateImageMetadata
generateMetadata
generateSitemaps
generateStaticParams
generateViewport
headers
ImageResponse
NextRequest
NextResponse
notFound
permanentRedirect
redirect
revalidatePath
revalidateTag
unstable_cache
unstable_noStore
useParams
usePathname
useReportWebVitals
useRouter
useSearchParams
useSelectedLayoutSegment
useSelectedLayoutSegments
userAgent
next.config.js Options
appDir
assetPrefix
basePath
compress
devIndicators
distDir
env
eslint
exportPathMap
generateBuildId
generateEtags
headers
httpAgentOptions
images
incrementalCacheHandlerPath
logging
mdxRs
onDemandEntries
optimizePackageImports
output
pageExtensions
Partial Prerendering (experimental)
poweredByHeader
productionBrowserSourceMaps
reactStrictMode
redirects
rewrites
serverActions
serverComponentsExternalPackages
trailingSlash
transpilePackages
turbo
typedRoutes
typescript
urlImports
webpack
webVitalsAttribution
create-next-app
Edge Runtime
Next.js CLI
Building Your Application
Routing
Pages and Layouts
Dynamic Routes
Linking and Navigating
Custom App
Custom Document
Custom Errors
API Routes
Internationalization
Authenticating
Middleware
Rendering
Server-side Rendering (SSR)
Static Site Generation (SSG)
Automatic Static Optimization
Client-side Rendering (CSR)
Edge and Node.js Runtimes
Data Fetching
getStaticProps
getStaticPaths
Forms and Mutations
getServerSideProps
Incremental Static Regeneration
Client-side Fetching
Styling
CSS Modules
Tailwind CSS
CSS-in-JS
Sass
Optimizing
Images
Fonts
Scripts
Static Assets
Lazy Loading
Analytics
OpenTelemetry
Instrumentation
Third Party Libraries
Configuring
TypeScript
ESLint
Environment Variables
Absolute Imports and Module Path Aliases
src Directory
MDX
AMP
Babel
PostCSS
Custom Server
Draft Mode
Error Handling
Debugging
Preview Mode
Content Security Policy
Testing
Vitest
Jest
Playwright
Cypress
Deploying
Going to Production
Static Exports
Multi Zones
Continuous Integration (CI) Build Caching
Upgrading
Codemods
From Pages to App
Version 14
Version 13
Version 12
Version 11
Version 10
Version 9
API Reference
Components
Font
<Head>
<Image>
<Image> (Legacy)
<Link>
<Script>
Functions
getInitialProps
getServerSideProps
getStaticPaths
getStaticProps
NextRequest
NextResponse
useAmp
useReportWebVitals
useRouter
userAgent
next.config.js Options
assetPrefix
basePath
compress
devIndicators
distDir
env
eslint
exportPathMap
generateBuildId
generateEtags
headers
httpAgentOptions
images
onDemandEntries
output
pageExtensions
poweredByHeader
productionBrowserSourceMaps
reactStrictMode
redirects
rewrites
Runtime Config
trailingSlash
transpilePackages
turbo
typescript
urlImports
webpack
webVitalsAttribution
create-next-app
Next.js CLI
Edge Runtime
Architecture
Accessibility
Fast Refresh
Next.js Compiler
Supported Browsers
Turbopack
Community
Contribution Guide
On this page
Vercel
CircleCI
Travis CI
GitLab CI
Netlify CI
AWS CodeBuild
GitHub Actions
Bitbucket Pipelines
Heroku
Azure Pipelines
Jenkins (Pipeline)
Edit this page on GitHub
Scroll to top
Pages Router
...
Deploying
Continuous Integration (CI) Build Caching
Continuous Integration (CI) Build Caching
To improve build performance, Next.js saves a cache to
.next/cache
that is shared between builds.
To take advantage of this cache in Continuous Integration (CI) environments, your CI workflow will need to be configured to correctly persist the cache between builds.
If your CI is not configured to persist
.next/cache
between builds, you may see a
No Cache Detected
error.
Here are some example cache configurations for common CI providers:
Vercel
Next.js caching is automatically configured for you. There's no action required on your part.
CircleCI
Edit your
save_cache
step in
.circleci/config.yml
to include
.next/cache
:
steps
:
-
save_cache
:
key
:
dependency-cache-{{ checksum "yarn.lock" }}
paths
:
-
./node_modules
-
./.next/cache
If you do not have a
save_cache
key, please follow CircleCI's
documentation on setting up build caching
.
Travis CI
Add or merge the following into your
.travis.yml
:
cache
:
directories
:
-
$HOME/.cache/yarn
-
node_modules
-
.next/cache
GitLab CI
Add or merge the following into your
.gitlab-ci.yml
:
cache
:
key
:
${CI_COMMIT_REF_SLUG}
paths
:
-
node_modules/
-
.next/cache/
Netlify CI
Use
Netlify Plugins
with
@netlify/plugin-nextjs
.
AWS CodeBuild
Add (or merge in) the following to your
buildspec.yml
:
cache
:
paths
:
-
'node_modules/**/*'
# Cache `node_modules` for faster `yarn` or `npm i`
-
'.next/cache/**/*'
# Cache Next.js for faster application rebuilds
GitHub Actions
Using GitHub's
actions/cache
, add the following step in your workflow file:
uses
:
actions/cache@v3
with
:
# See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
path
:
|
~/.npm
${{ github.workspace }}/.next/cache
# Generate a new cache whenever packages or source files change.
key
:
${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
# If source files changed but packages didn't, rebuild from a prior cache.
restore-keys
:
|
${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
Bitbucket Pipelines
Add or merge the following into your
bitbucket-pipelines.yml
at the top level (same level as
pipelines
):
definitions
:
caches
:
nextcache
:
.next/cache
Then reference it in the
caches
section of your pipeline's
step
:
-
step
:
name
:
your_step_name
caches
:
-
node
-
nextcache
Heroku
Using Heroku's
custom cache
, add a
cacheDirectories
array in your top-level package.json:
"cacheDirectories"
: [
".next/cache"
]
Azure Pipelines
Using Azure Pipelines'
Cache task
, add the following task to your pipeline yaml file somewhere prior to the task that executes
next build
:
-
task
:
Cache@2
displayName
:
'Cache .next/cache'
inputs
:
key
:
next | $(Agent.OS) | yarn.lock
path
:
'$(System.DefaultWorkingDirectory)/.next/cache'
Jenkins (Pipeline)
Using Jenkins'
Job Cacher
plugin, add the following build step to your
Jenkinsfile
where you would normally run
next build
or
npm install
:
stage("Restore npm packages") {
steps {
// Writes lock-file to cache based on the GIT_COMMIT hash
writeFile file
:
"next-lock.cache"
,
text
:
"$GIT_COMMIT"
cache(caches
:
[
arbitraryFileCache(
path
:
"node_modules"
,
includes
:
"**/*"
,
cacheValidityDecidingFile
:
"package-lock.json"
)
]
) {
sh "npm install"
}
}
}
stage("Build") {
steps {
// Writes lock-file to cache based on the GIT_COMMIT hash
writeFile file
:
"next-lock.cache"
,
text
:
"$GIT_COMMIT"
cache(caches
:
[
arbitraryFileCache(
path
:
".next/cache"
,
includes
:
"**/*"
,
cacheValidityDecidingFile
:
"next-lock.cache"
)
]
) {
// aka `next build`
sh "npm run build"
}
}
}
Previous
Multi Zones
Next
Upgrading
Was this helpful?
supported.
Send
Resources
Docs
Learn
Showcase
Blog
Analytics
Next.js Conf
Previews
More
Commerce
Contact Sales
GitHub
Releases
Telemetry
About
Vercel
Next.js + Vercel
Open Source Software
GitHub
Twitter
Legal
Privacy Policy
Cookie Preferences
Subscribe to our newsletter
Stay updated on new releases and features, guides, and case studies.
Subscribe
©
2023
Vercel
, Inc.